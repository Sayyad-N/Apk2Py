name: Build APK
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk libncurses5 lib32z1
        sudo apt install -y build-essential git python3-pip python3-dev
        sudo apt install -y libffi-dev libssl-dev zlib1g-dev libbz2-dev
        sudo apt install -y libreadline-dev libsqlite3-dev wget curl llvm
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install cython buildozer
        
    - name: Check project structure
      run: |
        echo "=== Project files ==="
        ls -la
        echo "=== Python files ==="
        find . -name "*.py" -type f
        
    - name: Initialize buildozer if needed
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "Creating buildozer.spec..."
          buildozer init
        fi
        echo "=== buildozer.spec content ==="
        cat buildozer.spec
        
    - name: Setup Android SDK
      run: |
        # Create buildozer Android platform directory
        mkdir -p $HOME/.buildozer/android/platform
        
        # Download and setup Android SDK in buildozer's expected location
        cd $HOME/.buildozer/android/platform
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p android-sdk/cmdline-tools
        mv cmdline-tools android-sdk/cmdline-tools/latest
        
        # Set environment variables
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        # Accept licenses and install required components
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "build-tools;34.0.0" "platforms;android-34"
        
        # Verify installation
        echo "=== SDK Structure ==="
        ls -la $ANDROID_SDK_ROOT/
        echo "=== Build Tools ==="
        ls -la $ANDROID_SDK_ROOT/build-tools/34.0.0/ 2>/dev/null || echo "Build tools not found"
        echo "=== Checking aidl ==="
        ls -la $ANDROID_SDK_ROOT/build-tools/34.0.0/aidl 2>/dev/null || echo "aidl not found"
        
    - name: Build APK with detailed logging
      run: |
        # Set environment variables to point to buildozer's SDK location
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
        export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/34.0.0
        
        # Verify buildozer can find the SDK
        echo "=== Buildozer SDK Check ==="
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        ls -la $HOME/.buildozer/android/platform/ 2>/dev/null || echo "Platform directory not found"
        ls -la $HOME/.buildozer/android/platform/android-sdk/build-tools/ 2>/dev/null || echo "Build tools directory not found"
        
        # Show environment
        echo "=== Environment ==="
        echo "Python version: $(python --version)"
        echo "Java version: $(java -version)"
        echo "Buildozer version: $(buildozer version)"
        
        # Build with maximum verbosity
        buildozer android debug --verbose
        
    - name: Check build output
      run: |
        echo "=== Build directory ==="
        ls -la
        echo "=== Bin directory ==="
        ls -la bin/ 2>/dev/null || echo "No bin directory found"
        echo "=== Buildozer directory ==="
        ls -la .buildozer/ 2>/dev/null || echo "No .buildozer directory found"
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: TapOut-APK
        path: bin/*.apk
      if: success()
        
    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: .buildozer/
      if: failure()
